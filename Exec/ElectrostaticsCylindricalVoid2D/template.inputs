# ====================================================================================================
# AmrMesh class options
# ====================================================================================================
AmrMesh.lo_corner        = -4E-2 0 -1          ## Low corner of problem domain
AmrMesh.hi_corner        =  4E-2  4E-2  1          ## High corner of problem domain
AmrMesh.verbosity        = -1                ## Controls verbosity. 
AmrMesh.coarsest_domain  = 128 64 128       ## Number of cells on coarsest domain
AmrMesh.max_amr_depth    = 5                 ## Maximum amr depth
AmrMesh.max_sim_depth    = -1                ## Maximum simulation depth
AmrMesh.fill_ratio       = 1.0               ## Fill ratio for grid generation
AmrMesh.buffer_size      = 2                 ## Number of cells between grid levels
AmrMesh.grid_algorithm   = tiled             ## Berger-Rigoustous 'br' or 'tiled' for the tiled algorithm
AmrMesh.box_sorting      = morton            ## 'none', 'shuffle', 'morton'
AmrMesh.blocking_factor  = 16                ## Blocking factor. 
AmrMesh.max_box_size     = 16                ## Maximum allowed box size
AmrMesh.max_ebis_box     = 16                ## Maximum allowed box size for EBIS generation. 
AmrMesh.ref_rat          = 2 2 2 2 2 2       ## Refinement ratios (mixed ratios are allowed). 
AmrMesh.num_ghost        = 2                 ## Number of ghost cells. 
AmrMesh.lsf_ghost        = 2                 ## Number of ghost cells when writing level-set to grid
AmrMesh.eb_ghost         = 2                 ## Set number of of ghost cells for EB stuff
AmrMesh.mg_interp_order  = 2                 ## Multigrid interpolation order
AmrMesh.mg_interp_radius = 2                 ## Multigrid interpolation radius
AmrMesh.mg_interp_weight = 2                 ## Multigrid interpolation weight (for least squares)
AmrMesh.centroid_interp  = minmod	     ## Centroid interp stencils. linear, lsq, minmod, etc
AmrMesh.eb_interp        = minmod            ## EB interp stencils. linear, taylor, minmod, etc
AmrMesh.redist_radius    = 1                 ## Redistribution radius for hyperbolic conservation laws


# ====================================================================================================
# Driver class options
# ====================================================================================================
Driver.verbosity                       = 2                # Engine verbosity
Driver.geometry_generation             = chombo-discharge # Grid generation method, 'chombo-discharge' or 'chombo'
Driver.geometry_scan_level             = 0                # Geometry scan level for chombo-discharge geometry generator
Driver.ebis_memory_load_balance        = false            # If using Chombo geo-gen, use memory as loads for EBIS generation  
Driver.output_dt                       = -1.0             # Output interval (values <= 0 enforces step-based output)
Driver.plot_interval                   = 10               # Plot interval
Driver.checkpoint_interval             = 100              # Checkpoint interval
Driver.regrid_interval                 = 10               # Regrid interval
Driver.write_regrid_files              = false            # Write regrid files or not.
Driver.write_restart_files             = false            # Write restart files or not
Driver.initial_regrids                 = 0                # Number of initial regrids
Driver.do_init_load_balance            = false            # If true, load balance the first step in a fresh simulation.
Driver.start_time                      = 0                # Start time (fresh simulations only)
Driver.stop_time                       = 1.0              # Stop time
Driver.max_steps                       = 0              # Maximum number of steps
Driver.geometry_only                   = false            # Special option that ONLY plots the geometry
Driver.write_memory                    = false            # Write MPI memory report
Driver.write_loads                     = false            # Write (accumulated) computational loads
Driver.output_directory                = ./               # Output directory
Driver.output_names                    = simulation       # Simulation output names
Driver.max_plot_depth                  = -1               # Restrict maximum plot depth (-1 => finest simulation level)
Driver.max_chk_depth                   = -1               # Restrict chechkpoint depth (-1 => finest simulation level)	
Driver.num_plot_ghost                  = 1                # Number of ghost cells to include in plots
Driver.plt_vars                        = levelset         # 'tags', 'mpi_rank', 'levelset', 'loads'
Driver.restart                         = 0                # Restart step (less or equal to 0 implies fresh simulation)
Driver.allow_coarsening                = true             # Allows removal of grid levels according to CellTagger
Driver.grow_geo_tags                   = 2                # How much to grow tags when using geometry-based refinement. 
Driver.refine_angles                   = 15.              # Refine cells if angle between elements exceed this value.
Driver.refine_electrodes               = 0                # Refine electrode surfaces. -1 => equal to refine_geometry
Driver.refine_dielectrics              = 0                # Refine dielectric surfaces. -1 => equal to refine_geometry


# ====================================================================================================
# FieldSolverMultigrid class options
# ====================================================================================================
FieldSolverMultigrid.verbosity         = -1                # Class verbosity
FieldSolverMultigrid.jump_bc           = natural           # Jump BC type ('natural' or 'saturation_charge')
FieldSolverMultigrid.bc.x.lo           = neumann 0.0     # Bc type (see docs)
FieldSolverMultigrid.bc.x.hi           = neumann 0.0     # Bc type (see docs)
FieldSolverMultigrid.bc.y.lo           = dirichlet 0.0     # Bc type (see docs)
FieldSolverMultigrid.bc.y.hi           = dirichlet 1.0     # Bc type (see docs)
FieldSolverMultigrid.bc.z.lo           = dirichlet 0.0     # Bc type (see docs)
FieldSolverMultigrid.bc.z.hi           = dirichlet 0.0     # Bc type (see docs)
FieldSolverMultigrid.plt_vars          = phi rho E         # Plot variables: 'phi', 'rho', 'E', 'res', 'perm', 'sigma', 'Esol'
FieldSolverMultigrid.use_regrid_slopes = true              # Use slopes when regridding or not
FieldSolverMultigrid.kappa_source      = true              # Volume weighted space charge density or not (depends on algorithm)
FieldSolverMultigrid.filter_rho        = 0                 # Number of filterings of space charge before Poisson solve
FieldSolverMultigrid.filter_potential  = 0                 # Number of filterings of potential after Poisson solve

FieldSolverMultigrid.gmg_verbosity     = -1                # GMG verbosity
FieldSolverMultigrid.gmg_pre_smooth    = 16                # Number of relaxations in downsweep
FieldSolverMultigrid.gmg_post_smooth   = 16                # Number of relaxations in upsweep
FieldSolverMultigrid.gmg_bott_smooth   = 16                # Number of at bottom level (before dropping to bottom solver)
FieldSolverMultigrid.gmg_min_iter      = 5                 # Minimum number of iterations
FieldSolverMultigrid.gmg_max_iter      = 32                # Maximum number of iterations
FieldSolverMultigrid.gmg_exit_tol      = 1.E-10            # Residue tolerance
FieldSolverMultigrid.gmg_exit_hang     = 0.2               # Solver hang
FieldSolverMultigrid.gmg_min_cells     = 8                 # Bottom drop
FieldSolverMultigrid.gmg_drop_order    = 0                 # Drop stencil order to 1 if domain is coarser than this.
FieldSolverMultigrid.gmg_bc_order      = 2                 # Boundary condition order for multigrid
FieldSolverMultigrid.gmg_bc_weight     = 1                 # Boundary condition weights (for least squares)
FieldSolverMultigrid.gmg_jump_order    = 2                 # Boundary condition order for jump conditions
FieldSolverMultigrid.gmg_jump_weight   = 1                 # Boundary condition weight for jump conditions (for least squares)
FieldSolverMultigrid.gmg_reduce_order  = false             # If true, always use order=1 EB stencils in coarsened cells
FieldSolverMultigrid.gmg_bottom_solver = bicgstab          # Bottom solver type. 'simple', 'bicgstab', or 'gmres'
FieldSolverMultigrid.gmg_cycle         = vcycle            # Cycle type. Only 'vcycle' supported for now. 
FieldSolverMultigrid.gmg_smoother      = red_black         # Relaxation type. 'jacobi', 'multi_color', or 'red_black'


# ====================================================================================================
# GeoCoarsener class options
# ====================================================================================================
GeoCoarsener.num_boxes   = 0            # Number of coarsening boxes (0 = don't coarsen)
GeoCoarsener.box1_lo     = 0.0 0.0 0.0  # Remove irregular cell tags 
GeoCoarsener.box1_hi     = 0.0 0.0 0.0  # between these two corners
GeoCoarsener.box1_lvl    = 0            # up to this level
GeoCoarsener.box1_inv    = false        # Remove except inside box (true)

# ====================================================================================================
# SurfaceODESolver solver settings. 
# ====================================================================================================
SurfaceODESolver.verbosity = -1                # Chattiness
SurfaceODESolver.regrid    = conservative      # Regrid method. 'conservative' or 'arithmetic'
SurfaceODESolver.plt_vars  = phi               # Plot variables. Valid arguments are 'phi' and 'rhs'


# ====================================================================================================
# CylindricalVoid class options
# ====================================================================================================
CylindricalVoid.use_electrode         = false          # Turn on/off electrode
CylindricalVoid.use_dielectric        = true          # Turn on/off dielectric

CylindricalVoid.wheel_live            = false          # Live electrode or not
CylindricalVoid.wheel_radius          = 2.5E-3             # Wheel radius
CylindricalVoid.wheel_center          = 0 0E-3 0         # Wheel center
CylindricalVoid.wheel_curvature       = 0.1E-3           # Wheel curvature (thickness)
CylindricalVoid.wheel_stem_radius     = 0.01          # Wheel stem radius (< 0 => turn off this part)
CylindricalVoid.wheel_smooth          = 1E-4          # Smoothing distance for CSG union
CylindricalVoid.wheel_extra_thickness = 0.3E-3           # Extra wheel thickness

CylindricalVoid.box_dimensions        = 7E-2 1E-1 1         # Box dimensions
CylindricalVoid.box_translate         = 0 2E-2 0         # Box translation
CylindricalVoid.box_permittivity      = 2.0           # Dielectric box permittivity
CylindricalVoid.box_curvature         = 1E-4             # Corner curvatures

CylindricalVoid.profile_type          = cylinder_y          # Profile type. 'square', 'sphere', 'cylinder_d' with d = 'x/y/z'
CylindricalVoid.profile_translate     = 0 -2E-3 0         # Profile translation
CylindricalVoid.profile_repetition_lo = 0 0 0         # Repetition pattern in low coordinate direction
CylindricalVoid.profile_repetition_hi = 0 0 0         # Repetition pattern in high coordinate direction
CylindricalVoid.profile_period        = 5.32E-3 0 1         # Repetition period

CylindricalVoid.square_dimensions     = 1 1 1         # Dimensions for squares/square channels
CylindricalVoid.sphere_radius         = 1             # Radius for sphere profiles
CylindricalVoid.cylinder_radius       = 2E-4             # Radius for cylinder profiles

# ====================================================================================================
# FIELD_STEPPER CLASS OPTIONS
# ====================================================================================================
FieldStepper.verbosity    = -1              # Verbosity
FieldStepper.realm        = primal          # Realm where solver lives. 
FieldStepper.load_balance = false           # Load balance or not.
FieldStepper.box_sorting  = morton          # If you load balance you can redo the box sorting. 
FieldStepper.init_sigma   = 0.0             # Surface charge density
FieldStepper.init_rho     = 0.0             # Space charge density (value)
FieldStepper.rho_center   = 0 0 0           # Space charge blob center
FieldStepper.rho_radius   = 1.0             # Space charge blob radius

